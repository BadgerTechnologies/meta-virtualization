From a7f56278dd4762c56cccd559e260e51092763cac Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Mon, 13 Apr 2020 23:35:41 -0700
Subject: [PATCH] fix host library paths were used

Test the existence of recipe-sysrooot, add it back if lost

Upstream-Status: Inappropriate [oe specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>

---
 src/pybind/cephfs/setup.py | 6 +++++-
 src/pybind/rados/setup.py  | 6 +++++-
 src/pybind/rbd/setup.py    | 6 +++++-
 src/pybind/rgw/setup.py    | 6 +++++-
 4 files changed, 20 insertions(+), 4 deletions(-)

diff --git a/src/pybind/cephfs/setup.py b/src/pybind/cephfs/setup.py
index 87cdeb473..5144c8441 100755
--- a/src/pybind/cephfs/setup.py
+++ b/src/pybind/cephfs/setup.py
@@ -65,10 +65,14 @@ def get_python_flags(libs):
                filter(lambda lib: lib.startswith('-l'), py_libs)]
     compiler = new_compiler()
     distutils.sysconfig.customize_compiler(compiler)
+    libpl = distutils.sysconfig.get_config_var('LIBPL')
+    sysroot = os.environ.get('STAGING_DIR_HOST')
+    if not libpl.startswith(sysroot):
+        libpl = sysroot + libpl
     return dict(
         include_dirs=[distutils.sysconfig.get_python_inc()],
         library_dirs=distutils.sysconfig.get_config_vars('LIBDIR', 'LIBPL'),
-        libraries=libs + py_libs,
+        libraries=libs + [lib.replace('-l', '') for lib in py_libs],
         extra_compile_args=filter_unsupported_flags(
             compiler.compiler[0],
             compiler.compiler[1:] + distutils.sysconfig.get_config_var('CFLAGS').split()),
diff --git a/src/pybind/rados/setup.py b/src/pybind/rados/setup.py
index feafb605d..82aff5154 100755
--- a/src/pybind/rados/setup.py
+++ b/src/pybind/rados/setup.py
@@ -63,10 +63,14 @@ def get_python_flags(libs):
                filter(lambda lib: lib.startswith('-l'), py_libs)]
     compiler = new_compiler()
     distutils.sysconfig.customize_compiler(compiler)
+    libpl = distutils.sysconfig.get_config_var('LIBPL')
+    sysroot = os.environ.get('STAGING_DIR_HOST')
+    if not libpl.startswith(sysroot):
+        libpl = sysroot + libpl
     return dict(
         include_dirs=[distutils.sysconfig.get_python_inc()],
         library_dirs=distutils.sysconfig.get_config_vars('LIBDIR', 'LIBPL'),
-        libraries=libs + py_libs,
+        libraries=libs + [lib.replace('-l', '') for lib in py_libs],
         extra_compile_args=filter_unsupported_flags(
             compiler.compiler[0],
             compiler.compiler[1:] + distutils.sysconfig.get_config_var('CFLAGS').split()),
diff --git a/src/pybind/rbd/setup.py b/src/pybind/rbd/setup.py
index b9c6a78d2..4ef714f8d 100755
--- a/src/pybind/rbd/setup.py
+++ b/src/pybind/rbd/setup.py
@@ -65,10 +65,14 @@ def get_python_flags(libs):
                filter(lambda lib: lib.startswith('-l'), py_libs)]
     compiler = new_compiler()
     distutils.sysconfig.customize_compiler(compiler)
+    libpl = distutils.sysconfig.get_config_var('LIBPL')
+    sysroot = os.environ.get('STAGING_DIR_HOST')
+    if not libpl.startswith(sysroot):
+        libpl = sysroot + libpl
     return dict(
         include_dirs=[distutils.sysconfig.get_python_inc()],
         library_dirs=distutils.sysconfig.get_config_vars('LIBDIR', 'LIBPL'),
-        libraries=libs + py_libs,
+        libraries=libs + [lib.replace('-l', '') for lib in py_libs],
         extra_compile_args=filter_unsupported_flags(
             compiler.compiler[0],
             compiler.compiler[1:] + distutils.sysconfig.get_config_var('CFLAGS').split()),
diff --git a/src/pybind/rgw/setup.py b/src/pybind/rgw/setup.py
index 695038c0e..2521f0cbb 100755
--- a/src/pybind/rgw/setup.py
+++ b/src/pybind/rgw/setup.py
@@ -65,10 +65,14 @@ def get_python_flags(libs):
                filter(lambda lib: lib.startswith('-l'), py_libs)]
     compiler = new_compiler()
     distutils.sysconfig.customize_compiler(compiler)
+    libpl = distutils.sysconfig.get_config_var('LIBPL')
+    sysroot = os.environ.get('STAGING_DIR_HOST')
+    if not libpl.startswith(sysroot):
+        libpl = sysroot + libpl
     return dict(
         include_dirs=[distutils.sysconfig.get_python_inc()],
         library_dirs=distutils.sysconfig.get_config_vars('LIBDIR', 'LIBPL'),
-        libraries=libs + py_libs,
+        libraries=libs + [lib.replace('-l', '') for lib in py_libs],
         extra_compile_args=filter_unsupported_flags(
             compiler.compiler[0],
             compiler.compiler[1:] + distutils.sysconfig.get_config_var('CFLAGS').split()),
